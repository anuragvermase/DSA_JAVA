Ques : Given a linkedList check for cycle & return the starting point if exists.

head
#01 -> #02 -> #03 -> #04 -> #05 -> #06 -> #07 -> #08 ->#09 ->
s,f                                                    |        #10->
                                                      #17               #11->
                                                 #16 <-                        #12
                                                        #15 <-          #13  <-
                                                                #14 <-

-> if s and f meets, then we have a cycle.
{s moves 1 step & f moves 2 steps}

head
#01 -> #02 -> #03 -> #04 -> #05 -> #06 -> #07 -> #08 ->#09 ->
s,f                                                    |        #10->
                                                      #17               #11->
                                                 #16 <-                        #12
                                                        #15 <-          #13  <-
                                                                #14 <-

-> Observation 1 : If there is a cycle, s and f will meet, as gap is being reduced by 1 node in 1 iteration
-> Observation 2 : slow can never complete the cycle.


Ex:1
head                                                   s,f
#01 -> #02 -> #03 -> #04 -> #05 -> #06 -> #07 -> #08 ->#09 ->
s,f                                                    |        #10->
(at start)                                            #17               #11->
                                                 #16 <-                        #12
                                                        #15 <-          #13  <-
                                                                #14 <-


Ex:2
head                       s,f
#05 -> #06 -> #07 -> #08 ->#09 ->
s,f                        |        #10->
(at start)                #17               #11->
                     #16 <-                        #12
                            #15 <-          #13  <-
                                    #14 <-

//Psuedo code:

Node remove (Node head ){
Node s = head;
Node f = head;

While(s!=f){
s=s.next;
f=f.next.next;
}

f=head;  //or s=head

while(s!=f){
s=s.next;
f=f.next;
}

return s;   //or return f;
}

TC: O(N)
SC: O(1)
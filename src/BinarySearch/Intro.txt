Story: Police searches culprit

Police - must have knowledge of these two
1. Face/Photo : Whom to search {Target}
2. Location : Where to Search {Search space}

Eg:
{Whom to search}            {where to search}
word(AlgoPrep)              {newspaper/book/dictionary}   : we prefer dictionary
contact number (HR)         {LinkedIn/telephone directory}   : we prefer telephone directory

-> Search space is ordered, searching become easier

** Note : Binary Search can be possibly applied even if array is not sorted

Linear Search : Searching one by one.

Binary Search : Divide your search space in 2 parts, if we can discard one half, we can apply Binary Search.
-> Array should not necessarily be sorted.
_________________________________________________________________

Ques : Given a sorted arr[N] search if 'k' is present or not  ?
arr[10] : {4 7 10 13 15 20 21 24 26 28}
k=13 (true)

IDEA behind searching:

Idea 1 : Linear search:
T.C. : O(N)
S.P. : O(1)

Idea 2 : Binary search:
search space : given array
target : K (given : whom to search)

case 1:
mid = (lo+hi)/2
if(arr[mid]==K){
return true;
}

case 2:
mid = (lo+hi)/2
if(arr[mid]<K){
//discard left side & search in right
}

case 3:
mid = (lo+hi)/2
if(arr[mid]>K){
//discard right side & search in left
}

_______________________________________________________________
Mid-Calculation :

mid=(hi+lo)/2

Another way:

mid = lo + (hi-lo)/2

**** use this method instead of above method.
_______________________________________________________________
eg :
hi -> integer
lo -> integer
integer range : -2^32 to 2^32-1

therefore if we use :
mid=(hi+lo)/2
let lo -> 1
    hi -> 2^32-1

mid =(1+ 2^32-1)/2   {at (1+ 2^32-1) this stage it exceeding the integer range }

so we use:
mid = lo + (hi-lo)/2
mid = 1 + (2^32-1 -1)/2 {not exceeding the integer range at any point}

SO,IT PREVENTS OVERFLOW.